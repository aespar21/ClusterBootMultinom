% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_bootstrap.R
\name{multi.bootstrap}
\alias{multi.bootstrap}
\title{Run Multinomial Regression Models on a List of Data Sets}
\usage{
multi.bootstrap(org.data, data.sets, ref.outcome, multi.form,
  n.boot = length(data.sets)/1.25, xvar = "Exposure")
}
\arguments{
\item{org.data}{Original data set, of class \code{data.frame}.}

\item{data.sets}{List of data sets with same variables as \code{org.data}.}

\item{ref.outcome}{Integer; level of outcome variable to use as reference.}

\item{multi.form}{Formula used for all models.}

\item{n.boot}{Integer representing number of successful model fits required. Defaults to
80\% of length of \code{data.sets}.}

\item{xvar}{String to include in printed status updates. Defaults to "Exposure."}
}
\value{
List of 1) \code{org.model} (model fit to \code{org.data}); 2) \code{boot.models}
  (fits for all successful models); and 3) \code{num.failed} (number of models which failed).
}
\description{
Run \code{vglm()} on a master data set and each of a list of data sets created from it (often
using \code{create.sampdata()}), saving original model object, all successful model objects,
and number of models with errors.
}
\examples{
df <- data.frame(id = sample(1:20, size = 100, replace = TRUE),
                 x1 = rnorm(n = 100),
                 x2 = rbinom(p = 0.75, n = 100, size = 1),
                 y = sample(LETTERS[1:3], size = 100, replace = TRUE))
df <- df[order(df$id),]
df$time <- unlist(lapply(1:length(unique(df$id)),
                         FUN = function(idnum){ 1:nrow(df[df$id == unique(df$id)[idnum],]) }))

## Using create.sampdata(), generate list of cluster bootstrapped data sets
bootdata.list <- create.sampdata(org.data = df,
                                 id.var = 'id',
                                 n.sets = 25)

## Fit model to original and bootstrapped data frame,
##   saving errors and warnings to .txt file
boot.fits.a <- multi.bootstrap(org.data = df,
                               data.sets = bootdata.list,
                               ref.outcome = grep('A', levels(df$y)),
                               multi.form = as.formula('y ~ x1 + x2'))
}
\seealso{
\code{\link[VGAM]vglm()}.
}

